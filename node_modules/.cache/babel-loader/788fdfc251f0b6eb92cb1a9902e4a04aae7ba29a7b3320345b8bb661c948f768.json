{"ast":null,"code":"import Dexie from 'dexie';\nexport const db = new Dexie('videoEditor');\ndb.version(1).stores({\n  users: '++id, username, password, email, avatar, createdAt',\n  works: '++id, userId, title, cover, createdAt',\n  favorites: '++id, userId, workId, createdAt',\n  likes: '++id, userId, workId, createdAt'\n});\n\n// 初始化数据库\ndb.on('ready', async () => {\n  // 检查是否需要初始化示例数据\n  const userCount = await db.users.count();\n  if (userCount === 0) {\n    console.log('Database is empty, initializing with demo data...');\n  }\n});\nexport default db;","map":{"version":3,"names":["Dexie","db","version","stores","users","works","favorites","likes","on","userCount","count","console","log"],"sources":["C:/Users/Administrator/Desktop/ceshi/Watermark/src/db/index.js"],"sourcesContent":["import Dexie from 'dexie';\r\n\r\nexport const db = new Dexie('videoEditor');\r\n\r\ndb.version(1).stores({\r\n  users: '++id, username, password, email, avatar, createdAt',\r\n  works: '++id, userId, title, cover, createdAt',\r\n  favorites: '++id, userId, workId, createdAt',\r\n  likes: '++id, userId, workId, createdAt'\r\n});\r\n\r\n// 初始化数据库\r\ndb.on('ready', async () => {\r\n  // 检查是否需要初始化示例数据\r\n  const userCount = await db.users.count();\r\n  if (userCount === 0) {\r\n    console.log('Database is empty, initializing with demo data...');\r\n  }\r\n});\r\n\r\nexport default db; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,EAAE,GAAG,IAAID,KAAK,CAAC,aAAa,CAAC;AAE1CC,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;EACnBC,KAAK,EAAE,oDAAoD;EAC3DC,KAAK,EAAE,uCAAuC;EAC9CC,SAAS,EAAE,iCAAiC;EAC5CC,KAAK,EAAE;AACT,CAAC,CAAC;;AAEF;AACAN,EAAE,CAACO,EAAE,CAAC,OAAO,EAAE,YAAY;EACzB;EACA,MAAMC,SAAS,GAAG,MAAMR,EAAE,CAACG,KAAK,CAACM,KAAK,CAAC,CAAC;EACxC,IAAID,SAAS,KAAK,CAAC,EAAE;IACnBE,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;EAClE;AACF,CAAC,CAAC;AAEF,eAAeX,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}